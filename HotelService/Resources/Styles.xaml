<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
    InvalidatesImplicitDataTemplateResources="True"
    xmlns:utils="clr-namespace:HotelService.Utils">

    <utils:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    <utils:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <DropShadowEffect x:Key="CardShadowEffect" 
                  ShadowDepth="3" 
                  BlurRadius="12" 
                  Opacity="0.18" 
                  Color="#000000"/>

    <!--#region Color Palette - Luxury Hotel Theme -->
    <!-- Primary Colors - Burgundy Theme -->
    <SolidColorBrush x:Key="PrimaryColor" Color="#8E2140"/>
    <SolidColorBrush x:Key="PrimaryDarkColor" Color="#6A1731"/>
    <SolidColorBrush x:Key="PrimaryLightColor" Color="#B02C52"/>

    <!-- Accent Colors - Gold Accents -->
    <SolidColorBrush x:Key="AccentColor" Color="#D4B254"/>
    <SolidColorBrush x:Key="AccentDarkColor" Color="#B89538"/>
    <SolidColorBrush x:Key="AccentLightColor" Color="#E6CA7E"/>

    <!-- Text Colors -->
    <SolidColorBrush x:Key="TextPrimaryColor" Color="#322A28"/>
    <SolidColorBrush x:Key="TextSecondaryColor" Color="#584C46"/>
    <SolidColorBrush x:Key="TextTertiaryColor" Color="#7E736D"/>
    <SolidColorBrush x:Key="TextLightColor" Color="#FFFFFF"/>

    <!-- Background Colors -->
    <SolidColorBrush x:Key="BackgroundPrimaryColor" Color="#F8F5F0"/>
    <SolidColorBrush x:Key="BackgroundSecondaryColor" Color="#FFFBF5"/>
    <SolidColorBrush x:Key="BackgroundDarkColor" Color="#EEE9E2"/>

    <!-- Utility Colors -->
    <SolidColorBrush x:Key="BorderColor" Color="#D8CFC6"/>
    <SolidColorBrush x:Key="SeparatorColor" Color="#ECE5DD"/>
    <SolidColorBrush x:Key="ErrorColor" Color="#C2594F"/>
    <SolidColorBrush x:Key="SuccessColor" Color="#5B9A68"/>
    <SolidColorBrush x:Key="WarningColor" Color="#E9BA48"/>
    <SolidColorBrush x:Key="InfoColor" Color="#4E7D9A"/>
    <SolidColorBrush x:Key="DisabledColor" Color="#C5BCB3"/>

    <!-- Card and Shadow Colors -->
    <SolidColorBrush x:Key="CardBackgroundColor" Color="#FFFBF5"/>
    <Color x:Key="ShadowColor">#20000000</Color>
    <!--#endregion-->

    <!--#region Common Values -->
    <!-- Border Radius -->
    <CornerRadius x:Key="SmallCornerRadius">3</CornerRadius>
    <CornerRadius x:Key="DefaultCornerRadius">6</CornerRadius>
    <CornerRadius x:Key="LargeCornerRadius">10</CornerRadius>

    <!-- Spacing -->
    <Thickness x:Key="SmallSpacing">5</Thickness>
    <Thickness x:Key="DefaultSpacing">10</Thickness>
    <Thickness x:Key="MediumSpacing">15</Thickness>
    <Thickness x:Key="LargeSpacing">20</Thickness>
    <Thickness x:Key="XLargeSpacing">28</Thickness>

    <!-- Animation Durations -->
    <Duration x:Key="ShortAnimationDuration">0:0:0.12</Duration>
    <Duration x:Key="DefaultAnimationDuration">0:0:0.22</Duration>
    <Duration x:Key="LongAnimationDuration">0:0:0.32</Duration>
    <!--#endregion-->

    <!--#region Window Controls -->
    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="350"/>
        <Setter Property="MinHeight" Value="200"/>
    </Style>

    <Style x:Key="WindowControlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder" 
                            Background="{TemplateBinding Background}"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="ToolTip" Value="Свернуть"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Data="M0,5 L10,5"
                      Stroke="{StaticResource TextSecondaryColor}" 
                      StrokeThickness="1.6"/>
            </Setter.Value>
        </Setter>
    </Style>

 

    <Style x:Key="MaximizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="ToolTip" Value="Развернуть"/>
        <Setter Property="Content">
            <Setter.Value>
                <Rectangle Width="9" 
                           Height="9"
                           Stroke="{StaticResource TextSecondaryColor}" 
                           StrokeThickness="1.6"/>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="CustomDatePickerTemplate" TargetType="{x:Type DatePicker}">
    <Grid>
        <Grid.Resources>
            <!-- DatePickerTextBox Style -->
            <Style TargetType="{x:Type DatePickerTextBox}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="4,0,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                            Focusable="False" 
                                            HorizontalAlignment="Stretch" 
                                            VerticalAlignment="Center"/>
                                <TextBlock x:Name="WatermarkText" 
                                        Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}, Path=Tag}" 
                                        Foreground="{StaticResource TextSecondaryColor}" 
                                        Visibility="Collapsed" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Center"
                                        Margin="8,0,0,0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Text" Value=""/>
                                        <Condition Property="IsKeyboardFocused" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="WatermarkText" Property="Visibility" Value="Visible"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Calendar Button Template -->
            <ControlTemplate x:Key="DatePickerCalendarButtonTemplate" TargetType="{x:Type Button}">
                <Grid>
                    <Path x:Name="CalendarIcon" 
                          Fill="{StaticResource TextSecondaryColor}" 
                          Data="M19,3h-1V2c0-0.6-0.4-1-1-1s-1,0.4-1,1v1H8V2c0-0.6-0.4-1-1-1S6,1.4,6,2v1H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M19,19H5V8h14V19z M7,11h2v2H7V11z M11,11h2v2h-2V11z M15,11h2v2h-2V11z M7,15h2v2H7V15z M11,15h2v2h-2V15z M15,15h2v2h-2V15z"
                          Width="20" Height="20"
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center"/>
                   
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="CalendarIcon" Property="Fill" Value="{StaticResource PrimaryColor}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="CalendarIcon" Property="Fill" Value="{StaticResource PrimaryColor}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Grid.Resources>
        
        <Border x:Name="Border" 
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="4">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <DatePickerTextBox x:Name="PART_TextBox" 
                                 Grid.Column="0" 
                                 Focusable="{TemplateBinding Focusable}"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Center"
                                 Padding="{TemplateBinding Padding}"/>
                
                <Button x:Name="PART_Button" 
                      Grid.Column="1" 
                      Focusable="False"
                      Width="30"
                      Template="{StaticResource DatePickerCalendarButtonTemplate}"
                      Background="Transparent"
                      BorderThickness="0"/>
                
                <Popup x:Name="PART_Popup" 
                     StaysOpen="False" 
                     Placement="Bottom" 
                     AllowsTransparency="True" 
                     PlacementTarget="{Binding ElementName=PART_TextBox}">
                    <Border BorderBrush="{StaticResource BorderColor}"
                          BorderThickness="1"
                          Background="{StaticResource BackgroundPrimaryColor}"
                          CornerRadius="4"
                          Margin="0,2,0,0">
                        <Calendar x:Name="PART_Calendar" 
                                BorderThickness="0"
                                Foreground="{StaticResource TextPrimaryColor}"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Disabled">
                    <Storyboard>
                        <DoubleAnimation Duration="0" 
                                       Storyboard.TargetName="Border" 
                                       Storyboard.TargetProperty="Opacity" 
                                       To="0.65"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryLightColor}"/>
        </Trigger>
        <Trigger Property="IsKeyboardFocused" Value="True">
            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
        </Trigger>
        <Trigger Property="IsKeyboardFocusWithin" Value="True">
            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
        </Trigger>
        <Trigger Property="IsDropDownOpen" Value="True">
            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
        </Trigger>
        <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="{StaticResource DisabledColor}"/>
            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledColor}"/>
            <Setter TargetName="Border" Property="Background" Value="#F8F5F0"/>
            <Setter Property="Opacity" Value="0.65"/>
        </Trigger>
        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        </DataTrigger>
    </ControlTemplate.Triggers>
</ControlTemplate>

    <Style x:Key="RestoreButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="ToolTip" Value="Восстановить"/>
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <Rectangle Width="7"
                               Height="7"
                               Stroke="{StaticResource TextSecondaryColor}"
                               StrokeThickness="1.6"
                               Margin="0,2,2,0"/>
                    <Rectangle Width="7"
                               Height="7"
                               Stroke="{StaticResource TextSecondaryColor}"
                               StrokeThickness="1.6"
                               Margin="2,0,0,2"/>
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="ToolTip" Value="Закрыть"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Data="M0,0 L10,10 M0,10 L10,0"
                      Stroke="{StaticResource TextSecondaryColor}" 
                      StrokeThickness="1.6"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ErrorColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Text Controls -->
    <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="44"/>
        <Setter Property="Padding" Value="12,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundSecondaryColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                       Focusable="False"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"/>
                            <TextBlock x:Name="Placeholder"
                                     Text="{TemplateBinding Tag}"
                                     IsHitTestVisible="False"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Left"
                                     Margin="{TemplateBinding Padding}"
                                     Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryLightColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.65"/>
                            <Setter Property="Background" Value="#F8F5F0"/>
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="Tag" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="44"/>
        <Setter Property="Padding" Value="12,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundSecondaryColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                       Focusable="False"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"/>
                            <TextBlock x:Name="Placeholder"
                                     Text="{TemplateBinding Tag}"
                                     IsHitTestVisible="False"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Left"
                                     Margin="{TemplateBinding Padding}"
                                     Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryLightColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.65"/>
                            <Setter Property="Background" Value="#F8F5F0"/>
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="35,0,14,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="18">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Grid Width="18" Height="18" HorizontalAlignment="Left" Margin="14,0,0,0">
                            <Ellipse Width="12" Height="12" Stroke="{StaticResource TextTertiaryColor}" StrokeThickness="1.5"/>
                            <Path Data="M11,11 L14,14" Stroke="{StaticResource TextTertiaryColor}" StrokeThickness="1.5"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentLightColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Button Styles -->
    <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Height" Value="44"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryDarkColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledColor}"/>
                            <Setter Property="Opacity" Value="0.65"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SecondaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BackgroundSecondaryColor}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Height" Value="44"/>
        <Setter Property="Padding" Value="16,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundDarkColor}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryLightColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColor}"/>
                            <Setter Property="Opacity" Value="0.65"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#0A8E2140"/>
                            <Setter Property="Foreground" Value="{StaticResource PrimaryDarkColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledColor}"/>
                            <Setter Property="Opacity" Value="0.65"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" 
                                            BorderThickness="0,0,0,2" 
                                            BorderBrush="Transparent"
                                            Margin="0,0,2,0"
                                            Padding="15,8">
                        <ContentPresenter x:Name="ContentSite"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Center"
                                                          ContentSource="Header"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryLightColor}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundDarkColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}" />
        <Setter Property="Background" Value="{StaticResource BackgroundSecondaryColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
    </Style>

    <!-- Tab-style Main Menu Button -->
    <Style x:Key="TabMenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"/>
                            <!-- Подчеркивание при наведении -->
                            <Border x:Name="hoverIndicator" 
                                    Height="1" 
                                    Background="{StaticResource AccentColor}"
                                    VerticalAlignment="Bottom"
                                    Margin="8,0"
                                    Opacity="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundDarkColor}"/>
                            <Setter TargetName="hoverIndicator" Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundDarkColor}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Active Tab Menu Button Style -->
    <Style x:Key="ActiveTabMenuButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TabMenuButtonStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#10000000" Offset="0"/>
                    <GradientStop Color="#03000000" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!-- SubMenu Button Style -->
    <Style x:Key="SubMenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundDarkColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource AccentLightColor}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryDarkColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Active SubMenu Button Style -->
    <Style x:Key="ActiveSubMenuButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource SubMenuButtonStyle}">
        <Setter Property="Background" Value="{StaticResource AccentColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentDarkColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="1"
                                   Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   Width="16" 
                                   Height="16"
                                   Margin="10,0,0,0"/>
                            <ContentPresenter Grid.Column="2"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center"
                                              Margin="10,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region ComboBox Styles -->
    <!-- FocusVisual Style (Required for ComboBox) -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 1" 
                               Stroke="{StaticResource PrimaryColor}" 
                               StrokeThickness="1" SnapsToDevicePixels="true"
                               RadiusX="4" RadiusY="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ControlAnimationStyle">
        <Style.Resources>
            <Storyboard x:Key="FocusAnimation">
                <DoubleAnimation Storyboard.TargetProperty="BorderThickness"
                                 From="1" To="2" Duration="0:0:0.2"/>
            </Storyboard>
        </Style.Resources>
    </Style>
    <!-- ComboBox Toggle Button Style -->
    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" Background="Transparent" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="4">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" 
                                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                                            Content="{TemplateBinding Content}"
                                            HorizontalAlignment="Left" 
                                            Margin="8,0,0,0" 
                                            VerticalAlignment="Center"/>
                            <Border Grid.Column="1" Width="30" Background="Transparent">
                                <Path x:Name="Arrow" Data="M 0,0 L 8,0 L 4,4 Z" 
                                      Fill="{StaticResource TextSecondaryColor}" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundDarkColor}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="4" CenterY="2"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Default ComboBox Style -->
    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundSecondaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="44"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="14,5"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="#F8F5F0"/>
                <Setter Property="BorderBrush" Value="{StaticResource DisabledColor}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledColor}"/>
                <Setter Property="Opacity" Value="0.65"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Filter ComboBox Style - Optimized for filter panels -->
    <Style x:Key="FilterComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBoxStyle}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundSecondaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="44"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid">
                        <ToggleButton x:Name="ToggleButton" 
                                    ClickMode="Press"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Focusable="false"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ComboBoxToggleButtonStyle}">
                            <ToggleButton.Content>
                                <ContentPresenter x:Name="ContentSite" 
                                               Content="{TemplateBinding SelectionBoxItem}" 
                                               ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                               ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            </ToggleButton.Content>
                        </ToggleButton>
                        <TextBox x:Name="PART_EditableTextBox"
                               HorizontalContentAlignment="Left"
                               Background="Transparent"
                               BorderThickness="0"
                               Padding="{TemplateBinding Padding}"
                               Visibility="Hidden"
                               Focusable="True"
                               IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="PART_Popup"
                             AllowsTransparency="true"
                             Focusable="false"
                             IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                             PopupAnimation="Slide"
                             Placement="Bottom">
                            <Border x:Name="DropDownBorder"
                                  Background="{StaticResource BorderColor}"
                                  BorderBrush="{StaticResource BorderColor}"
                                  BorderThickness="1"
                                  CornerRadius="4"
                                  Margin="0,2,0,0">
                                <ScrollViewer x:Name="DropDownScrollViewer" 
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                            MinHeight="46">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource PrimaryLightColor}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="true">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledColor}"/>
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource DisabledColor}"/>
                            <Setter Property="Opacity" Value="0.65"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxPopupStyle">
        <Style.Resources>
            <Storyboard x:Key="PopupAnimation">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                From="0" To="1" Duration="0:0:0.2"/>
            </Storyboard>
        </Style.Resources>
    </Style>
    
    <!-- Item Container Style for ComboBoxItems -->
    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" 
                            Background="{StaticResource BorderColor}" 
                            BorderThickness="0" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource BackgroundDarkColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!-- Action Button Styles -->
    <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SuccessColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="44"/>
        <Setter Property="Height" Value="44"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Data="M0,8 H16 M8,0 V16" 
                      Stroke="White" 
                      StrokeThickness="2"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonStyle}">
        <Setter Property="Background" Value="{StaticResource InfoColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="38"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Data="M12,2 L2,12 L1,15 L4,14 L14,4 L12,2 M12,2 L14,4" 
                      Stroke="White" 
                      StrokeThickness="1.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonStyle}">
        <Setter Property="Background" Value="{StaticResource ErrorColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="38"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Data="M2,4 H14 M12,4 V14 C12,15 11,16 10,16 H6 C5,16 4,15 4,14 V4 M6,2 H10" 
                      Stroke="White" 
                      StrokeThickness="1.5"/>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Card Styles -->
    <Style x:Key="CardStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="{StaticResource LargeSpacing}"/>
        <Setter Property="Margin" Value="{StaticResource DefaultSpacing}"/>
    </Style>
    <!--#endregion-->

    <!--#region DataGrid Styles -->
    <Style x:Key="DefaultDataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource BackgroundSecondaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="{StaticResource BackgroundSecondaryColor}"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource BackgroundPrimaryColor}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource SeparatorColor}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource SeparatorColor}"/>
        <Setter Property="RowHeight" Value="42"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Padding" Value="12,0"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="BorderBrush" Value="#7C1C37"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F8F0E8"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Padding" Value="12,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ActionButtonBase" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.85"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ActionButtonIconStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ActionButtonBase}">
        <Setter Property="Background" Value="{StaticResource AccentColor}"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
    </Style>

    <Style x:Key="DeleteButtonIconStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ActionButtonBase}">
        <Setter Property="Background" Value="{StaticResource ErrorColor}"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
    </Style>

    <Style x:Key="InfoButtonIconStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ActionButtonBase}">
        <Setter Property="Background" Value="{StaticResource InfoColor}"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
    </Style>
    <!--#endregion-->

    <!--#region Typography -->
    <Style x:Key="HeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="SubHeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,18"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="PageTitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="TitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="SectionHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
        <Setter Property="Margin" Value="0,16,0,8"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="BodyTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="LabelTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="Margin" Value="0,0,0,6"/>
    </Style>

    <Style x:Key="CaptionTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource TextTertiaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="ErrorTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="{StaticResource ErrorColor}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,15"/>
    </Style>

    <Style x:Key="SuccessTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="{StaticResource SuccessColor}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,15"/>
    </Style>

    <Style x:Key="StatusBarTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->
    <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextLightColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Height" Value="44"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="16,0,8,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" 
                                   Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Width="20" 
                                   Height="20"/>
                            <ContentPresenter Grid.Column="1" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="Center" 
                                              Margin="12,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#40000000"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для активной кнопки меню -->
    <Style x:Key="ActiveMenuButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MenuButtonStyle}">
        <Setter Property="Background" Value="#30000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="16,0,8,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Width="3" 
                                    Height="22" 
                                    Background="{StaticResource AccentColor}" 
                                    CornerRadius="1.5" 
                                    HorizontalAlignment="Left" 
                                    Margin="-6,0,0,0"/>
                            <Image Grid.Column="0" 
                                   Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Width="20" 
                                   Height="20"/>
                            <ContentPresenter Grid.Column="1" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="Center" 
                                              Margin="12,0,0,0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


   <Style x:Key="DarkMinimizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="ToolTip" Value="Свернуть"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Data="M0,5 L10,5"
                      Stroke="{StaticResource TextLightColor}" 
                      StrokeThickness="1.6"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkMaximizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="ToolTip" Value="Развернуть"/>
        <Setter Property="Content">
            <Setter.Value>
                <Rectangle Width="9" 
                           Height="9"
                           Stroke="{StaticResource TextLightColor}" 
                           StrokeThickness="1.6"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkRestoreButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="ToolTip" Value="Восстановить"/>
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <Rectangle Width="7"
                               Height="7"
                               Stroke="{StaticResource TextLightColor}"
                               StrokeThickness="1.6"
                               Margin="0,2,2,0"/>
                    <Rectangle Width="7"
                               Height="7"
                               Stroke="{StaticResource TextLightColor}"
                               StrokeThickness="1.6"
                               Margin="2,0,0,2"/>
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="ToolTip" Value="Закрыть"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Data="M0,0 L10,10 M0,10 L10,0"
                      Stroke="{StaticResource TextLightColor}" 
                      StrokeThickness="1.6"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ErrorColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>